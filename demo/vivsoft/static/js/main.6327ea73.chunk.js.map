{"version":3,"sources":["Chart/ChartViewer.js","Chart/Chart.js","App/App.js","reportWebVitals.js","index.js"],"names":["ApexChart","props","series","name","data","options","chart","height","type","zoom","enabled","title","text","align","dataLabels","textAnchor","formatter","value","seriesIndex","w","dataPointIndex","console","log","config","stroke","width","curve","colors","xaxis","yaxis","fill","gradient","shadeIntensity","inverseColors","gradientToColors","opacityFrom","opacityTo","stops","id","Clock","useState","updateData","useEffect","setInterval","fetch","then","res","json","result","temp_f","current","forecast","forecastday","hour","map","item","x","time","slice","y","response","className","App","src","alt","role","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAGe,SAASA,EAAUC,GAChC,IAAMC,EAAS,CACb,CACEC,KAAM,OACNC,KAAMH,EAAMG,OAGVC,EAAU,CACdC,MAAO,CACLC,OAAQ,IACRC,KAAM,OACNC,KAAM,CACJC,SAAS,IAGbC,MAAO,CACLC,KAAM,+BACNC,MAAO,QAETC,WAAY,CACVJ,SAAS,EACTK,WAAY,SACZC,UAAW,SAASC,EAAT,GAAqD,IAAnCC,EAAkC,EAAlCA,YAA6BC,GAAK,EAArBC,eAAqB,EAALD,GAExD,OADAE,QAAQC,IAAIL,GACLE,EAAEI,OAAOrB,OAAOgB,GAAaf,KAAO,MAAQc,IAGvDO,OAAQ,CACNC,MAAO,EACPC,MAAO,UAETC,OAAQ,CAAC,WACTC,MAAO,CACLjB,MAAO,CACLC,KAAM,SAGViB,MAAO,CACLlB,MAAO,CACLC,KAAM,2BAGVkB,KAAM,CACJtB,KAAM,WACNuB,SAAU,CACRC,eAAgB,EAChBC,eAAe,EACfC,iBAAkB,CAAC,WACnBC,YAAa,EACbC,UAAW,EACX5B,KAAM,WACN6B,MAAO,CAAC,EAAG,OAIjB,OACE,qBAAKC,GAAG,QAAR,SACE,cAAC,IAAD,CAAOjC,QAASA,EAASH,OAAQA,EAAQM,KAAK,OAAOiB,MAAO,IAAMlB,OAAQ,QCzCjE,SAASgC,IAAS,IAAD,EAEDC,mBAAS,IAFR,mBAErBpC,EAFqB,KAEfqC,EAFe,KAY1B,OARFC,qBAAU,WACRC,aAAY,WApBTC,MAAM,iGACZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAQJ,MANiB,CACfC,OAFqED,EAA/DE,QAAWD,OAGjBE,SAJY,YACyDH,EAA1CG,SAAYC,YAD3B,MAC2CC,KAGxCC,KAAI,SAAAC,GACjB,MAAO,CAAEC,EAAGD,EAAKE,KAAKC,MAAM,IAAKC,EAAGJ,EAAKN,OAAS,0BAcjCJ,MAAK,SAAAe,GACpBnB,EAAWmB,EAAST,eAErB,OACF,IAGC,qBAAKU,UAAU,MAAf,SACE,cAAC,EAAD,CAAazD,KAAMA,EAAMO,MAAM,8BC9BzC,IAwCemD,EAxCH,WAKV,OACE,sBAAKD,UAAU,0CAAf,UACE,wBAAOA,UAAU,+GAAjB,UACE,yBAASA,UAAU,OAAnB,SACE,8BACE,qBAAKA,UAAU,qGAAqGE,IAAI,wKAG5H,yBAASF,UAAU,8BAAnB,SACE,yBAASA,UAAU,uEAAnB,uBAMJ,0BAASA,UAAU,+CAAnB,UACE,mCACE,qBAAKA,UAAU,gCAAf,SACE,oBAAIA,UAAU,uCAAd,uBAKF,qBAAKA,UAAU,2BAA2BE,IAAI,yEAAyEC,IAAI,GAAGC,KAAK,oBAErI,sBAAMJ,UAAU,iCAAhB,SACE,cAACtB,EAAD,aCtBK2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6327ea73.chunk.js","sourcesContent":["import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\nexport default function ApexChart(props) {\n  const series = [\n    {\n      name: \"Temp\",\n      data: props.data\n    }\n  ];\n  const options = {\n    chart: {\n      height: 350,\n      type: \"line\",\n      zoom: {\n        enabled: true\n      }\n    },\n    title: {\n      text: 'Weather Temperature Forecast',\n      align: 'left'\n    },\n    dataLabels: {\n      enabled: false,\n      textAnchor: 'middle',\n      formatter: function(value, { seriesIndex, dataPointIndex, w }) {\n        console.log(value);\n        return w.config.series[seriesIndex].name + \":  \" + value\n      }\n    },\n    stroke: {\n      width: 2,\n      curve: \"smooth\"\n    },\n    colors: [\"#210124\"],\n    xaxis: {\n      title: {\n        text: 'Time'\n      }\n    },\n    yaxis: {\n      title: {\n        text: 'Fahrenheit Temparature'\n      }\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shadeIntensity: 1,\n        inverseColors: true,\n        gradientToColors: [\"#DB162F\"],\n        opacityFrom: 1,\n        opacityTo: 1,\n        type: \"vertical\",\n        stops: [0, 30]\n      }\n    }\n  };\n  return (\n    <div id=\"chart\">\n      <Chart options={options} series={series} type=\"line\" width={1000} height={400} />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ChartViewer from \"./ChartViewer\";\n\nfunction getWeatherData() {\n  return fetch(\"https://api.weatherapi.com/v1/forecast.json?key=3738897fde7047f0a1822737203011&q=20171&days=1\")\n  .then(res => res.json())\n  .then(result => {\n    const { current: { temp_f }, forecast: { forecastday: [{ hour }] } } = result;\n    const response = {\n      temp_f,\n      forecast: hour.map(item => {\n        return { x: item.time.slice(10), y: item.temp_f + \" ÂºFahrenheit\" }\n      })\n    }\n    return response;\n  });\n}\n\n\nexport default function Clock() {\n\n    const [data, updateData] = useState([]);\n\n    useEffect(() => {\n      setInterval(() => {\n        getWeatherData().then(response => {\n          updateData(response.forecast);\n        })\n      }, 5000);\n    }, []);\n\n      return (\n        <div className=\"App\">\n          <ChartViewer data={data} title=\"Product Trends by Month\" />\n        </div>\n      );\n}","import './App.css';\nimport Clock from \"../Chart/Chart\"\n\nconst App = () => {\n  function componentDidMount() {\n    console.log(\"Mounted\");\n  };\n\n  return (\n    <div className=\"App grid grid-cols-11 h-screen relative\">\n      <aside className=\"hidden md:block menu md:col-span-4 lg:col-span-2 border-r border-gray-300 border-solid px-4 py-5 bg-gray-100\">\n        <section className=\"mb-4\">\n          <div>\n            <img className=\"text-sm bg-blue-600 rounded px-4 py-1 text-white shadow-md focus:outline-none focus:shadow-outline\" src=\"https://static.wixstatic.com/media/dcecb8_2f6687f84192433887675d6e40c5ed5f~mv2.png/v1/fill/w_189,h_50,al_c,q_85,usm_0.66_1.00_0.01/Slim%20Horizontal_White.webp\"/>\n          </div>\n        </section>\n        <section className=\"py-3 border-b text-gray-900\">\n          <section className=\"menu__menu-item hover:text-gray-700 text-sm mb-2 cursor-pointer flex\">\n            Home\n          </section>\n        </section>\n       \n      </aside>\n      <section className=\"col-span-11 md:col-span-7 lg:col-span-9 py-5\">\n        <header>\n          <div className=\"flex justify-center mb-8 px-8\">\n            <h1 className=\"flex items-center text-2xl font-bold\">\n              Weather\n            </h1>\n          </div>\n          \n          <img className='mb-4 w-full banner-image' src='https://ltheme.com/wp-content/uploads/2019/03/JUX-Weather-Forecast.png' alt='' role='presentation'/>\n        </header>\n        <main className=\"grid grid-cols-4 px-8 lg:pb-20\">\n          <Clock />\n        </main>\n      </section>\n    </div>\n  )\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}